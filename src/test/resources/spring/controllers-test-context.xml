<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:mockito="http://www.mockito.org/spring/mockito"
       xsi:schemaLocation="
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.mockito.org/spring/mockito
			http://www.mockito.org/spring/mockito.xsd">

	<context:property-placeholder location="classpath:spring/config.properties" />

	<context:component-scan base-package="pl.jojczykp.bookstore" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<mvc:annotation-driven/>

	<mockito:mock id="booksCommandFactory" class="pl.jojczykp.bookstore.utils.BooksCommandFactory" />

	<mockito:mock id="booksCreateService" class="pl.jojczykp.bookstore.services.books.CreateBookService" />
	<mockito:mock id="booksUpdateService" class="pl.jojczykp.bookstore.services.books.UpdateBookService" />
	<mockito:mock id="booksDeleteService" class="pl.jojczykp.bookstore.services.books.DeleteBookService" />
	<mockito:mock id="booksDisplayService" class="pl.jojczykp.bookstore.services.books.DisplayBooksService" />
	<mockito:mock id="changeBooksPagerService" class="pl.jojczykp.bookstore.services.books.ChangeBooksPagerService" />
	<mockito:mock id="downloadBookService" class="pl.jojczykp.bookstore.services.books.DownloadBookService" />

</beans>
